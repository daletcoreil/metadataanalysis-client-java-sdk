/*
 * Dalet Metadata Analysis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: cortexsupport@dalet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dalet.mediator.metadataanalysis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Span
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-03T19:24:04.607+08:00[GMT+08:00]")
public class Span {
  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_BEGIN_OFFSET = "beginOffset";
  @SerializedName(SERIALIZED_NAME_BEGIN_OFFSET)
  private java.lang.Double beginOffset;


  public Span content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContent() {
    return content;
  }


  public void setContent(String content) {
    this.content = content;
  }


  public Span beginOffset(java.lang.Double beginOffset) {
    
    this.beginOffset = beginOffset;
    return this;
  }

   /**
   * The API calculates the beginning offset of the content in the original document as a number of characters starting from zero index position.
   * @return beginOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The API calculates the beginning offset of the content in the original document as a number of characters starting from zero index position.")

  public java.lang.Double getBeginOffset() {
    return beginOffset;
  }


  public void setBeginOffset(java.lang.Double beginOffset) {
    this.beginOffset = beginOffset;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Span span = (Span) o;
    return Objects.equals(this.content, span.content) &&
        Objects.equals(this.beginOffset, span.beginOffset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, beginOffset);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Span {\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    beginOffset: ").append(toIndentedString(beginOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

