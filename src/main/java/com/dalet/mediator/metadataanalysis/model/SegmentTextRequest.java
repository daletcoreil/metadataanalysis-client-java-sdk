/*
 * Dalet Metadata Analysis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: cortexsupport@dalet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dalet.mediator.metadataanalysis.model;

import java.util.Objects;
import java.util.Arrays;
import com.dalet.mediator.metadataanalysis.model.Locator;
import com.dalet.mediator.metadataanalysis.model.SegmentTextResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SegmentTextRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-04T14:41:39.145+08:00[GMT+08:00]")
public class SegmentTextRequest {
  public static final String SERIALIZED_NAME_INPUT_FILE = "inputFile";
  @SerializedName(SERIALIZED_NAME_INPUT_FILE)
  private Locator inputFile;

  public static final String SERIALIZED_NAME_OUTPUT_LOCATION = "outputLocation";
  @SerializedName(SERIALIZED_NAME_OUTPUT_LOCATION)
  private SegmentTextResponse outputLocation;

  public static final String SERIALIZED_NAME_LINES = "lines";
  @SerializedName(SERIALIZED_NAME_LINES)
  private Integer lines = null;

  public static final String SERIALIZED_NAME_CHARACTERS = "characters";
  @SerializedName(SERIALIZED_NAME_CHARACTERS)
  private Integer characters = null;


  public SegmentTextRequest inputFile(Locator inputFile) {
    
    this.inputFile = inputFile;
    return this;
  }

   /**
   * Get inputFile
   * @return inputFile
  **/
  @ApiModelProperty(required = true, value = "")

  public Locator getInputFile() {
    return inputFile;
  }


  public void setInputFile(Locator inputFile) {
    this.inputFile = inputFile;
  }


  public SegmentTextRequest outputLocation(SegmentTextResponse outputLocation) {
    
    this.outputLocation = outputLocation;
    return this;
  }

   /**
   * Get outputLocation
   * @return outputLocation
  **/
  @ApiModelProperty(required = true, value = "")

  public SegmentTextResponse getOutputLocation() {
    return outputLocation;
  }


  public void setOutputLocation(SegmentTextResponse outputLocation) {
    this.outputLocation = outputLocation;
  }


  public SegmentTextRequest lines(Integer lines) {
    
    this.lines = lines;
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLines() {
    return lines;
  }


  public void setLines(Integer lines) {
    this.lines = lines;
  }


  public SegmentTextRequest characters(Integer characters) {
    
    this.characters = characters;
    return this;
  }

   /**
   * Get characters
   * @return characters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCharacters() {
    return characters;
  }


  public void setCharacters(Integer characters) {
    this.characters = characters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SegmentTextRequest segmentTextRequest = (SegmentTextRequest) o;
    return Objects.equals(this.inputFile, segmentTextRequest.inputFile) &&
        Objects.equals(this.outputLocation, segmentTextRequest.outputLocation) &&
        Objects.equals(this.lines, segmentTextRequest.lines) &&
        Objects.equals(this.characters, segmentTextRequest.characters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputFile, outputLocation, lines, characters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SegmentTextRequest {\n");
    sb.append("    inputFile: ").append(toIndentedString(inputFile)).append("\n");
    sb.append("    outputLocation: ").append(toIndentedString(outputLocation)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    characters: ").append(toIndentedString(characters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

