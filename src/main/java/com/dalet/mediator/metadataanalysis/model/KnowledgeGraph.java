/*
 * Dalet Metadata Analysis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: cortexsupport@dalet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dalet.mediator.metadataanalysis.model;

import java.util.Objects;
import java.util.Arrays;
import com.dalet.mediator.metadataanalysis.model.KnowledgeGraphDetailedDescription;
import com.dalet.mediator.metadataanalysis.model.KnowledgeGraphImage;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * KnowledgeGraph
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-04T14:41:39.145+08:00[GMT+08:00]")
public class KnowledgeGraph {
  public static final String SERIALIZED_NAME_MID = "mid";
  @SerializedName(SERIALIZED_NAME_MID)
  private String mid;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPES = "types";
  @SerializedName(SERIALIZED_NAME_TYPES)
  private List<String> types = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DETAILED_DESCRIPTION = "detailedDescription";
  @SerializedName(SERIALIZED_NAME_DETAILED_DESCRIPTION)
  private KnowledgeGraphDetailedDescription detailedDescription;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private KnowledgeGraphImage image;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;


  public KnowledgeGraph mid(String mid) {
    
    this.mid = mid;
    return this;
  }

   /**
   * Google knowledge graph id.
   * @return mid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Google knowledge graph id.")

  public String getMid() {
    return mid;
  }


  public void setMid(String mid) {
    this.mid = mid;
  }


  public KnowledgeGraph name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public KnowledgeGraph types(List<String> types) {
    
    this.types = types;
    return this;
  }

  public KnowledgeGraph addTypesItem(String typesItem) {
    if (this.types == null) {
      this.types = new ArrayList<String>();
    }
    this.types.add(typesItem);
    return this;
  }

   /**
   * Get types
   * @return types
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTypes() {
    return types;
  }


  public void setTypes(List<String> types) {
    this.types = types;
  }


  public KnowledgeGraph description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public KnowledgeGraph detailedDescription(KnowledgeGraphDetailedDescription detailedDescription) {
    
    this.detailedDescription = detailedDescription;
    return this;
  }

   /**
   * Get detailedDescription
   * @return detailedDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KnowledgeGraphDetailedDescription getDetailedDescription() {
    return detailedDescription;
  }


  public void setDetailedDescription(KnowledgeGraphDetailedDescription detailedDescription) {
    this.detailedDescription = detailedDescription;
  }


  public KnowledgeGraph image(KnowledgeGraphImage image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KnowledgeGraphImage getImage() {
    return image;
  }


  public void setImage(KnowledgeGraphImage image) {
    this.image = image;
  }


  public KnowledgeGraph url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The official website URL of the entity, if available.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The official website URL of the entity, if available.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KnowledgeGraph knowledgeGraph = (KnowledgeGraph) o;
    return Objects.equals(this.mid, knowledgeGraph.mid) &&
        Objects.equals(this.name, knowledgeGraph.name) &&
        Objects.equals(this.types, knowledgeGraph.types) &&
        Objects.equals(this.description, knowledgeGraph.description) &&
        Objects.equals(this.detailedDescription, knowledgeGraph.detailedDescription) &&
        Objects.equals(this.image, knowledgeGraph.image) &&
        Objects.equals(this.url, knowledgeGraph.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mid, name, types, description, detailedDescription, image, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KnowledgeGraph {\n");
    sb.append("    mid: ").append(toIndentedString(mid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    detailedDescription: ").append(toIndentedString(detailedDescription)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

