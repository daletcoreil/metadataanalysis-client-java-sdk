/*
 * Dalet Metadata Analysis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: cortexsupport@dalet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dalet.mediator.metadataanalysis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Generic description of a file location according to the EBU FIMS specification.
 */
@ApiModel(description = "Generic description of a file location according to the EBU FIMS specification.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-04T14:41:39.145+08:00[GMT+08:00]")
public class Locator {
  public static final String SERIALIZED_NAME_AWS_S3_BUCKET = "awsS3Bucket";
  @SerializedName(SERIALIZED_NAME_AWS_S3_BUCKET)
  private String awsS3Bucket;

  public static final String SERIALIZED_NAME_AWS_S3_KEY = "awsS3Key";
  @SerializedName(SERIALIZED_NAME_AWS_S3_KEY)
  private String awsS3Key;

  public static final String SERIALIZED_NAME_HTTP_ENDPOINT = "httpEndpoint";
  @SerializedName(SERIALIZED_NAME_HTTP_ENDPOINT)
  private String httpEndpoint;


  public Locator awsS3Bucket(String awsS3Bucket) {
    
    this.awsS3Bucket = awsS3Bucket;
    return this;
  }

   /**
   * Name of an AWS S3 bucket
   * @return awsS3Bucket
  **/
  @ApiModelProperty(required = true, value = "Name of an AWS S3 bucket")

  public String getAwsS3Bucket() {
    return awsS3Bucket;
  }


  public void setAwsS3Bucket(String awsS3Bucket) {
    this.awsS3Bucket = awsS3Bucket;
  }


  public Locator awsS3Key(String awsS3Key) {
    
    this.awsS3Key = awsS3Key;
    return this;
  }

   /**
   * Name of a file in the AWS S3 bucket. For example, name of media file to be indexed in an Input Locator or name of a JSON file in an Output Locator.
   * @return awsS3Key
  **/
  @ApiModelProperty(required = true, value = "Name of a file in the AWS S3 bucket. For example, name of media file to be indexed in an Input Locator or name of a JSON file in an Output Locator.")

  public String getAwsS3Key() {
    return awsS3Key;
  }


  public void setAwsS3Key(String awsS3Key) {
    this.awsS3Key = awsS3Key;
  }


  public Locator httpEndpoint(String httpEndpoint) {
    
    this.httpEndpoint = httpEndpoint;
    return this;
  }

   /**
   * Public URL to access the file in the bucket. Must be computed using the AWS SDK method &#x60;GeneratePresignedUrl&#x60;
   * @return httpEndpoint
  **/
  @ApiModelProperty(required = true, value = "Public URL to access the file in the bucket. Must be computed using the AWS SDK method `GeneratePresignedUrl`")

  public String getHttpEndpoint() {
    return httpEndpoint;
  }


  public void setHttpEndpoint(String httpEndpoint) {
    this.httpEndpoint = httpEndpoint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Locator locator = (Locator) o;
    return Objects.equals(this.awsS3Bucket, locator.awsS3Bucket) &&
        Objects.equals(this.awsS3Key, locator.awsS3Key) &&
        Objects.equals(this.httpEndpoint, locator.httpEndpoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsS3Bucket, awsS3Key, httpEndpoint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Locator {\n");
    sb.append("    awsS3Bucket: ").append(toIndentedString(awsS3Bucket)).append("\n");
    sb.append("    awsS3Key: ").append(toIndentedString(awsS3Key)).append("\n");
    sb.append("    httpEndpoint: ").append(toIndentedString(httpEndpoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

